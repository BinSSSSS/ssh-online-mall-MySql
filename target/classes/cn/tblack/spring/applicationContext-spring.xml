<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">


	<context:component-scan
		base-package="cn.tblack.mall.dao" />
	<context:component-scan
		base-package="cn.tblack.mall.action" />
	<context:component-scan
		base-package="cn.tblack.mall.service" />

	<context:property-placeholder
		location="classpath:db.properties" />

	<!-- 配置 阿里巴巴的 DruidDataSource 作为数据源 -->
	<bean id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource">
		<property name="url" value="${jdbc.url}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${druid.initialSize}" />
		<property name="maxActive" value="${druid.maxActive}" />
		<property name="maxWait" value="${druid.maxWait}" />
		<property name="minIdle" value="${druid.minIdle}" />
		<property name="timeBetweenEvictionRunsMillis"
			value="${druid.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis"
			value="${druid.minEvictableIdleTimeMillis}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<!-- 输出SQL语句到控制台 -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 使用getCurrentSession() 必须配置 -->
				<!--  如果是使用了 spring 整合的话， 则可以不需要。 -->
				<!-- 
				<prop key="hibernate.current_session_context_class">thread</prop> -->
			</props>
		</property>
		<!--扫描该包下的所有实体类 -->
		<property name="packagesToScan">
			<list>
				<value>cn.tblack.mall.domain</value>
			</list>
		</property>

		<!-- 映射到具体的配置文件 -->
		<!-- <property name="mappingResources"> <list> <value>cn/tblack/mall/domain/item.hbm.xml</value> 
			</list> </property> -->

	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 定义事务规则 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="select*" propagation="REQUIRED"
				read-only="true" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />

		</tx:attributes>
	</tx:advice>

	<!-- 定义事务入口 -->
	<aop:config>
		<aop:pointcut id="serviceMethod"
			expression="execution(* cn.tblack.mall.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="serviceMethod" />
	</aop:config>
</beans>